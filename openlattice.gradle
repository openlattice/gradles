//Easy semantic version based off describe + tags

def bpr="${System.getenv("bamboo_planRepository_revision")}"

println "Using bpr: " + bpr

def getVersionName = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    if( bpr == 'null' || bpr == null ) {
        commandLine 'git', 'describe', '--tags', '--long' 
    } else {
        commandLine 'git', 'describe', '--tags', '--long', bpr
    }
    standardOutput = stdout
  }
  def tagVer = stdout.toString().trim()
  def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

  if (tagVer.contains('dev')) {
    semVer += "-SNAPSHOT"
  }
  return semVer
}
version = getVersionName()

//This gets the version plus build number, no -SNAPSHOTs
def getFullVersion = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    if( bpr == 'null' || bpr == null ) {
        commandLine 'git', 'describe', '--tags', '--long' 
    } else {
        commandLine 'git', 'describe', '--tags', '--long', bpr
    }
    standardOutput = stdout
  }
  def tagVer = stdout.toString().trim()
  def semVer = (tagVer =~ /v?([\d\.]+)/)[0][1]

  if (tagVer.contains('dev')) {
    ext.bambooBuild =".${System.getenv("bamboo_buildNumber")}"
    if ( ext.bambooBuild == ".null" ) {
      ext.bambooBuild = "-SNAPSHOT"
    }
    semVer += ext.bambooBuild
  }
  return semVer
}
ext.fullVersion = getFullVersion()

tasks.withType(Tar){
  compression = Compression.GZIP
}

apply from: "https://raw.githubusercontent.com/openlattice/gradles/master/repos.gradle"
apply from: "https://raw.githubusercontent.com/openlattice/gradles/master/publish.gradle"

task wrapper(type: Wrapper) {
  gradleVersion = '4.5.1'
}
//Run jacoco after tests.
if( project.hasProperty('projectName') && project.hasProperty('scmUrl')  ) {
test { finalizedBy jacocoTestReport }
}
/*
 * Allow maintaing shared client git hooks in the repository. At some point should consider making task
 * or making it depend on eclipse  so it doesn't run everytime you run gradle
afterEvaluate {
  copy {
    if ( project.hasProperty('projectName') ) {
      logger.info "Copying hooks for ${getProjectDir()} from ${projectName}/hooks to ${projectName}/.git/hooks"
    }
    from ("${getProjectDir()}/hooks")
    into "${getProjectDir()}/.git/hooks"
  }
}
*/

/**
 * To make use of this, mark a dependency as `changing: true` if it is a snapshot dependency
 *  This way it won't be cached and you'll always get the newest code.
 *  This should automagically work for '-SNAPSHOT' dependencies
 *
 * Ex:
 *  dependencies {
 *    compile group: "group", name: "projectA", version: "1.1-SNAPSHOT", changing: true
 *  }
 */
configurations.all {
  // check for updates every build
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

ext.versionSuffix = ""
if( ext.fullVersion.contains("-SNAPSHOT") ) {
  ext.versionSuffix = "-SNAPSHOT"
}
/**
 * Internal Versions
 **/
ext.conductor_client_version='0.0.6-SNAPSHOT'
ext.kindling_version='0.0.1-SNAPSHOT'
ext.scrunchie_version='0.0.2-SNAPSHOT'
ext.datastore_version='0.0.0-SNAPSHOT'
ext.mail_service_version='0.0.3-SNAPSHOT'
ext.mail_service_client_version='0.0.1-SNAPSHOT'
ext.rhizome_version='2.8.1-SNAPSHOT'
ext.conductor_version='0.0.1-SNAPSHOT'
ext.datastore_version='0.0.0-SNAPSHOT'
ext.shuttle_java_version='0.1.8-SNAPSHOT'
ext.api_version="0.0.8-SNAPSHOT"
//${versionSuffix}"
ext.rhizome_client_version='0.0.8-SNAPSHOT'
ext.courier_version='0.0.1-SNAPSHOT';
ext.scribe_version='0.0.1-SNAPSHOT';
/**
 * External versions
 **/
ext.apache_httpcomponents_version='4.4'
ext.auth0_version='0.4.0'
ext.auth0_spring_version='1.0.0-rc.3'
ext.cassandra_client_utils_version='3.5'
ext.cassandra_driver_version='3.1.3'
ext.commons_codec_version='1.10'
ext.commonsio_version='2.5'
ext.commonsLang_version='3.4'
ext.dropwizard_metrics_version='3.1.2'
ext.elastic_version='6.0.0'
ext.findbugs_version='3.0.1'
ext.guava_version='19.0'
ext.hazelcast_version='3.9'
ext.hazelcast_wm_version='3.8.1'
ext.hibernate_version='5.3.4.Final'
ext.immutables_version='2.3.9'
ext.jackson_version='2.9.2'
ext.javax_inject_version='1'
ext.javax_servlet_version='2.3.1'
ext.javax_servlet_api_version='3.1.0'
ext.jetty_version='9.4.8.v20171121'
ext.jmustache_version = '1.11'
ext.jodatime_version='2.9.1'
ext.log4j_version='2.9.1'
ext.lz4_version='1.3'
ext.netty_epoll_version='4.0.44.Final'
ext.netty_os_arch='linux-x86_64'
ext.odata_version='4.2.0'
ext.okhttp_version='2.3.0'
ext.retrofit_version='1.9.0'
ext.retrofit2_version='2.3.0'
ext.ryantenney_metrics_version='3.1.3'
ext.slf4j_version='1.7.22'
ext.snappy_version='1.1.2.1'
ext.snakeyaml_version='1.19'
ext.spark_version='2.2.0'
ext.spark_cassandra_connector_version='2.0.1'
ext.spongy_castle_version='1.51.0.0'
ext.spring_framework_version='4.3.13.RELEASE'
ext.spring_security_version='4.2.3.RELEASE'
ext.uuid_version='3.4'

/**
 * Testing versions
 **/
ext.junit_version='4.12'
ext.mockito_version='1.9.5'
